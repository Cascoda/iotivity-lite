From 046071fb9684588dfbc3d69894ecf198bd6ecd6c Mon Sep 17 00:00:00 2001
From: Jozef Kralik <jozef.kralik@kistler.com>
Date: Thu, 1 Oct 2020 22:01:31 +0200
Subject: [PATCH 2/5] constrained

---
 library/entropy_poll.c | 24 ++++++++++++++++++++++--
 1 file changed, 22 insertions(+), 2 deletions(-)

diff --git a/library/entropy_poll.c b/library/entropy_poll.c
index cfadd4e2c..3550a837c 100644
--- a/library/entropy_poll.c
+++ b/library/entropy_poll.c
@@ -77,12 +77,32 @@
 #if !defined(MBEDTLS_NO_PLATFORM_ENTROPY)
 
 #if !defined(unix) && !defined(__unix__) && !defined(__unix) && \
-    !defined(__APPLE__) && !defined(_WIN32) && !defined(__QNXNTO__) && \
+    !defined(__APPLE__) && !defined(_WIN32) && !defined(__OC_RANDOM) && !defined(__QNXNTO__) && \
     !defined(__HAIKU__)
 #error "Platform entropy sources only work on Unix and Windows, see MBEDTLS_NO_PLATFORM_ENTROPY in config.h"
 #endif
 
-#if defined(_WIN32) && !defined(EFIX64) && !defined(EFI32)
+#ifdef __OC_RANDOM
+#include <string.h>
+#include "port/oc_random.h"
+
+int mbedtls_platform_entropy_poll( void *data,
+                           unsigned char *output, size_t len, size_t *olen )
+{
+    (void) data;
+    *olen = 0;
+    do {
+        unsigned int val = oc_random_value();
+        size_t l = (len > sizeof(val))?sizeof(val):len;
+        memcpy(output + *olen, &val, l);
+        len -= l;
+        *olen += l;
+    } while (len > 0);
+
+    return 0;
+}
+
+#elif defined(_WIN32) && !defined(EFIX64) && !defined(EFI32)
 
 #if !defined(_WIN32_WINNT)
 #define _WIN32_WINNT 0x0400
-- 
2.19.2.windows.1

